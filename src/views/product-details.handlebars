<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
        <div class="card-body">
          <h2 class="card-title">{{product.title}}</h2>
          <div class="mb-4">
            <p class="card-text">{{product.description}}</p>
            <p class="card-text"><strong>Código:</strong> {{product.code}}</p>
            <p class="card-text"><strong>Precio:</strong>
              {{formatPrice product.price}}</p>
            <p class="card-text"><strong>Stock:</strong> {{product.stock}}</p>
            <p class="card-text"><strong>Categoría:</strong>
              {{product.category}}</p>
          </div>

          {{#if user}}
            <div class="mb-3">
              <label for="quantity" class="form-label">Cantidad:</label>
              <input
                type="number"
                class="form-control"
                id="quantity"
                min="1"
                max="{{product.stock}}"
                value="1"
              />
            </div>
            <div class="d-grid gap-2">
              <button
                class="btn btn-primary"
                id="addToCart"
                data-product-id="{{product._id}}"
              >
                Agregar al carrito
              </button>
            </div>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  const cartId = '{{user.cart}}';
  console.log('Cart ID:', cartId);

  document.addEventListener('DOMContentLoaded', function() {
    const addToCartButton = document.getElementById('addToCart');
    
    if (addToCartButton) {
      addToCartButton.addEventListener('click', async function() {
        if (this.disabled) return;

        const productId = this.dataset.productId;
        const quantity = parseInt(document.getElementById('quantity').value);

        try {
          this.disabled = true;
          this.innerText = 'Agregando...';

          const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify({ quantity })
          });

          const data = await response.json();

          if (response.ok) {
            this.classList.remove('btn-primary');
            this.classList.add('btn-success');
            this.innerText = '¡Agregado!';
            
            Swal.fire({
              title: '¡Éxito!',
              text: 'Producto agregado al carrito',
              icon: 'success',
              toast: true,
              position: 'top-end',
              showConfirmButton: false,
              timer: 3000
            });
          } else {
            throw new Error(data.message || 'Error al agregar al carrito');
          }
        } catch (error) {
          console.error('Error:', error);
          this.classList.remove('btn-primary');
          this.classList.add('btn-danger');
          this.innerText = 'Error';
          
          Swal.fire({
            title: 'Error',
            text: error.message || 'Error al agregar el producto al carrito',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
          });
        } finally {
          setTimeout(() => {
            this.disabled = false;
            this.classList.remove('btn-success', 'btn-danger');
            this.classList.add('btn-primary');
            this.innerText = 'Agregar al carrito';
          }, 2000);
        }
      });
    }
  });
</script>