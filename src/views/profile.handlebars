<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
        <div class="card-body">
          <h2 class="card-title text-center mb-4">Mi Perfil</h2>

          <div id="profile-content" class="d-none">
            <div class="row mb-3">
              <div class="col-md-6">
                <p><strong>Nombre:</strong> <span id="userName"></span></p>
              </div>
              <div class="col-md-6">
                <p><strong>Email:</strong> <span id="userEmail"></span></p>
              </div>
            </div>

            <div class="mb-3">
              <p><strong>Rol:</strong> <span id="userRole"></span></p>
            </div>

            <div class="d-grid gap-2">
              <button id="logoutButton" class="btn btn-danger">Cerrar Sesión</button>
            </div>
          </div>

          <div id="loading" class="text-center">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Cargando...</span>
            </div>
          </div>

          <div id="error-message" class="alert alert-danger mt-3 d-none">
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/auth.js"></script>
<script>
  // Función para cargar los datos del perfil async function loadProfileData() {
  try { const response = await fetch('/api/sessions/current', { method: 'GET',
  headers: { 'Accept': 'application/json' }, credentials: 'include' }); if
  (!response.ok) { const errorData = await response.json(); throw new
  Error(errorData.message || 'Error al cargar el perfil'); } const data = await
  response.json(); if (data.status === 'success' && data.payload.user) { const
  user = data.payload.user; document.getElementById('userEmail').textContent =
  user.email; document.getElementById('userName').textContent =
  `${user.first_name} ${user.last_name}`;
  document.getElementById('userRole').textContent = user.role;
  document.getElementById('profile-content').classList.remove('d-none');
  document.getElementById('loading').classList.add('d-none'); } else { throw new
  Error('No se pudo cargar la información del usuario'); } } catch (error) {
  console.error('Error:', error); Swal.fire({ icon: 'error', title: 'Error',
  text: error.message || 'Error al cargar el perfil' });
  document.getElementById('error-message').textContent = error.message;
  document.getElementById('error-message').classList.remove('d-none');
  document.getElementById('loading').classList.add('d-none'); } } // Cargar
  datos cuando la página se carga document.addEventListener('DOMContentLoaded',
  loadProfileData); // Manejar el logout
  document.getElementById('logoutButton')?.addEventListener('click', async () =>
  { try { const response = await fetch('/api/sessions/logout', { method: 'POST',
  headers: { 'Accept': 'application/json' }, credentials: 'include' }); const
  data = await response.json(); if (data.status === 'success') {
  window.location.href = '/login'; } else { throw new Error(data.message ||
  'Error al cerrar sesión'); } } catch (error) { console.error('Error:', error);
  Swal.fire({ icon: 'error', title: 'Error', text: error.message || 'Error al
  cerrar sesión' }); } });
</script>